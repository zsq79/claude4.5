services:
  kiro2api:
    build:
      context: .
      dockerfile: Dockerfile.simple
    image: kiro2api:local
    container_name: kiro2api
    restart: unless-stopped
    ports:
      - "8080:8080"
    env_file:
      - .env
    environment:
      # ===== Token 配置 =====
      # JSON 格式，支持多账号池和双认证方式 (Social/IdC)
      - KIRO_AUTH_TOKEN=${KIRO_AUTH_TOKEN}
      # 客户端认证 Token（用于 API 访问）
      - KIRO_CLIENT_TOKEN=${KIRO_CLIENT_TOKEN:-123456}
      
      # ===== 服务配置 =====
      - PORT=${PORT:-8080}
      - GIN_MODE=${GIN_MODE:-release}
      
      # ===== 日志配置 =====
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - LOG_FORMAT=${LOG_FORMAT:-json}
      - LOG_CONSOLE=${LOG_CONSOLE:-true}
      - LOG_FILE=${LOG_FILE:-}
      
      # ===== 隐身模式配置（Kiro IDE 真实请求头格式）=====
      # 启用隐身模式（推荐开启，使用真实 Kiro IDE 请求头）
      - STEALTH_MODE=${STEALTH_MODE:-true}
      # 请求头策略:
      #   - real_simulation: 真实 Kiro IDE 格式（推荐，默认）
      #   - random: 随机生成（已过时）
      - HEADER_STRATEGY=${HEADER_STRATEGY:-real_simulation}
      # HTTP/2 模式: auto（自动）| force（强制）| disable（禁用）
      - STEALTH_HTTP2_MODE=${STEALTH_HTTP2_MODE:-auto}
      
      # ===== 工具配置 =====
      # 工具描述的最大长度（字符数）
      - MAX_TOOL_DESCRIPTION_LENGTH=${MAX_TOOL_DESCRIPTION_LENGTH:-10000}
    volumes:
      - aws_sso_cache:/home/appuser/.aws/sso/cache
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost:8080/v1/models"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

volumes:
  aws_sso_cache: